{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/focus-visible-70161a50.js"],"names":["__webpack_require__","r","__webpack_exports__","d","startFocusVisible","FOCUS_KEYS","currentFocus","keyboardMode","doc","document","setFocus","elements","forEach","el","classList","remove","add","pointerDown","addEventListener","ev","includes","key","composedPath","toFocus","filter","contains","activeElement","body"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,sCAAAE,IAAA,IAEAC,EAAA,4FAEAD,EAAA,WACA,IAAAE,EAAA,GACAC,GAAA,EACAC,EAAAC,SAEAC,EAAA,SAAAC,GACAL,EAAAM,QAAA,SAAAC,GACA,OAAAA,EAAAC,UAAAC,OAXA,iBAaAJ,EAAAC,QAAA,SAAAC,GACA,OAAAA,EAAAC,UAAAE,IAdA,iBAgBAV,EAAAK,GAGAM,EAAA,WACAV,GAAA,EACAG,EAAA,KAGAF,EAAAU,iBAAA,mBAAAC,IACAZ,EAAAF,EAAAe,SAAAD,EAAAE,OAGAX,EAAA,MAGAF,EAAAU,iBAAA,mBAAAC,GACA,GAAAZ,GAAAY,EAAAG,aAAA,CACA,IAAAC,EAAAJ,EAAAG,eAAAE,OAAA,SAAAX,GACA,QAAAA,EAAAC,WACAD,EAAAC,UAAAW,SAlCA,mBAuCAf,EAAAa,MAGAf,EAAAU,iBAAA,sBACAV,EAAAkB,gBAAAlB,EAAAmB,MACAjB,EAAA,MAGAF,EAAAU,iBAAA,aAAAD,GACAT,EAAAU,iBAAA,YAAAD","file":"static/js/3.7a4e254c.chunk.js","sourcesContent":["var ION_FOCUSED = 'ion-focused';\nvar ION_FOCUSABLE = 'ion-focusable';\nvar FOCUS_KEYS = ['Tab', 'ArrowDown', 'Space', 'Escape', ' ', 'Shift', 'Enter', 'ArrowLeft', 'ArrowRight', 'ArrowUp'];\n\nvar startFocusVisible = function startFocusVisible() {\n  var currentFocus = [];\n  var keyboardMode = true;\n  var doc = document;\n\n  var setFocus = function setFocus(elements) {\n    currentFocus.forEach(function (el) {\n      return el.classList.remove(ION_FOCUSED);\n    });\n    elements.forEach(function (el) {\n      return el.classList.add(ION_FOCUSED);\n    });\n    currentFocus = elements;\n  };\n\n  var pointerDown = function pointerDown() {\n    keyboardMode = false;\n    setFocus([]);\n  };\n\n  doc.addEventListener('keydown', function (ev) {\n    keyboardMode = FOCUS_KEYS.includes(ev.key);\n\n    if (!keyboardMode) {\n      setFocus([]);\n    }\n  });\n  doc.addEventListener('focusin', function (ev) {\n    if (keyboardMode && ev.composedPath) {\n      var toFocus = ev.composedPath().filter(function (el) {\n        if (el.classList) {\n          return el.classList.contains(ION_FOCUSABLE);\n        }\n\n        return false;\n      });\n      setFocus(toFocus);\n    }\n  });\n  doc.addEventListener('focusout', function () {\n    if (doc.activeElement === doc.body) {\n      setFocus([]);\n    }\n  });\n  doc.addEventListener('touchstart', pointerDown);\n  doc.addEventListener('mousedown', pointerDown);\n};\n\nexport { startFocusVisible };"],"sourceRoot":""}