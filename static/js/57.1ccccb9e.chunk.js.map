{"version":3,"sources":["../node_modules/@ionic/core/dist/esm-es5/chunk-ba834eff.js","../node_modules/@ionic/core/dist/esm-es5/ion-action-sheet-controller_8.entry.js"],"names":["__webpack_require__","d","__webpack_exports__","createColorClasses","getClassMap","hostContext","openURL","tslib__WEBPACK_IMPORTED_MODULE_0__","selector","el","closest","color","_a","length","ion-color","undefined","classes","map","Array","isArray","split","filter","c","trim","getClassList","forEach","SCHEME","url","ev","direction","router","this","label","test","document","querySelector","preventDefault","componentOnReady","sent","push","r","ActionSheetController","AlertController","Anchor","LoadingController","ModalController","PickerController","PopoverController","ToastController","_chunk_84f6bf13_js__WEBPACK_IMPORTED_MODULE_1__","_chunk_d83bfeae_js__WEBPACK_IMPORTED_MODULE_3__","_chunk_ba834eff_js__WEBPACK_IMPORTED_MODULE_4__","hostRef","Object","prototype","create","options","dismiss","data","role","id","getTop","_this","routerDirection","onClick","href","componentDidLoad","console","warn","render","mode","attrs","rel","class","assign","defineProperty","get","enumerable","configurable"],"mappings":"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","file":"static/js/57.1ccccb9e.chunk.js","sourcesContent":["var _this = this;\n\nimport * as tslib_1 from \"tslib\";\n\nvar hostContext = function hostContext(selector, el) {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\n\n\nvar createColorClasses = function createColorClasses(color) {\n  var _a;\n\n  return typeof color === 'string' && color.length > 0 ? (_a = {\n    'ion-color': true\n  }, _a[\"ion-color-\" + color] = true, _a) : undefined;\n};\n\nvar getClassList = function getClassList(classes) {\n  if (classes !== undefined) {\n    var array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array.filter(function (c) {\n      return c != null;\n    }).map(function (c) {\n      return c.trim();\n    }).filter(function (c) {\n      return c !== '';\n    });\n  }\n\n  return [];\n};\n\nvar getClassMap = function getClassMap(classes) {\n  var map = {};\n  getClassList(classes).forEach(function (c) {\n    return map[c] = true;\n  });\n  return map;\n};\n\nvar SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\n\nvar openURL = function openURL(url, ev, direction) {\n  return tslib_1.__awaiter(_this, void 0, void 0, function () {\n    var router;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!(url != null && url[0] !== '#' && !SCHEME.test(url))) return [3\n          /*break*/\n          , 2];\n          router = document.querySelector('ion-router');\n          if (!router) return [3\n          /*break*/\n          , 2];\n\n          if (ev != null) {\n            ev.preventDefault();\n          }\n\n          return [4\n          /*yield*/\n          , router.componentOnReady()];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , router.push(url, direction)];\n\n        case 2:\n          return [2\n          /*return*/\n          , false];\n      }\n    });\n  });\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };","import * as tslib_1 from \"tslib\";\nimport { r as registerInstance, d as getIonMode, h, H as Host } from './chunk-84f6bf13.js';\nimport './chunk-1074393c.js';\nimport { g as createOverlay, h as dismissOverlay, j as getOverlay } from './chunk-d83bfeae.js';\nimport { o as openURL, c as createColorClasses } from './chunk-ba834eff.js';\n\nvar ActionSheetController =\n/** @class */\nfunction () {\n  function ActionSheetController(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create an action sheet overlay with action sheet options.\n   *\n   * @param options The options to use to create the action sheet.\n   */\n\n\n  ActionSheetController.prototype.create = function (options) {\n    return createOverlay('ion-action-sheet', options);\n  };\n  /**\n   * Dismiss the open action sheet overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the action sheet.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the action sheet.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the action sheet to dismiss. If an id is not provided, it will dismiss the most recently opened action sheet.\n   */\n\n\n  ActionSheetController.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-action-sheet', id);\n  };\n  /**\n   * Get the most recently opened action sheet overlay.\n   */\n\n\n  ActionSheetController.prototype.getTop = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-action-sheet')];\n      });\n    });\n  };\n\n  return ActionSheetController;\n}();\n\nvar AlertController =\n/** @class */\nfunction () {\n  function AlertController(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create an alert overlay with alert options.\n   *\n   * @param options The options to use to create the alert.\n   */\n\n\n  AlertController.prototype.create = function (options) {\n    return createOverlay('ion-alert', options);\n  };\n  /**\n   * Dismiss the open alert overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the alert.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the alert.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the alert to dismiss. If an id is not provided, it will dismiss the most recently opened alert.\n   */\n\n\n  AlertController.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-alert', id);\n  };\n  /**\n   * Get the most recently opened alert overlay.\n   */\n\n\n  AlertController.prototype.getTop = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-alert')];\n      });\n    });\n  };\n\n  return AlertController;\n}();\n/**\n * @deprecated Use `ion-router-link` instead.\n */\n\n\nvar Anchor =\n/** @class */\nfunction () {\n  function Anchor(hostRef) {\n    var _this = this;\n\n    registerInstance(this, hostRef);\n    /**\n     * When using a router, it specifies the transition direction when navigating to\n     * another page using `href`.\n     */\n\n    this.routerDirection = 'forward';\n\n    this.onClick = function (ev) {\n      openURL(_this.href, ev, _this.routerDirection);\n    };\n  }\n\n  Anchor.prototype.componentDidLoad = function () {\n    console.warn('The <ion-anchor> component has been deprecated. Please use an <ion-router-link> if you are using a vanilla JS or Stencil project or an <a> with the Angular router.');\n  };\n\n  Anchor.prototype.render = function () {\n    var _a;\n\n    var mode = getIonMode(this);\n    var attrs = {\n      href: this.href,\n      rel: this.rel\n    };\n    return h(Host, {\n      onClick: this.onClick,\n      class: Object.assign({}, createColorClasses(this.color), (_a = {}, _a[mode] = true, _a['ion-activatable'] = true, _a))\n    }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null)));\n  };\n\n  Object.defineProperty(Anchor, \"style\", {\n    get: function get() {\n      return \":host{--background:transparent;--color:var(--ion-color-primary,#3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return Anchor;\n}();\n\nvar LoadingController =\n/** @class */\nfunction () {\n  function LoadingController(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create a loading overlay with loading options.\n   *\n   * @param options The options to use to create the loading.\n   */\n\n\n  LoadingController.prototype.create = function (options) {\n    return createOverlay('ion-loading', options);\n  };\n  /**\n   * Dismiss the open loading overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the loading.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the loading.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the loading to dismiss. If an id is not provided, it will dismiss the most recently opened loading.\n   */\n\n\n  LoadingController.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-loading', id);\n  };\n  /**\n   * Get the most recently opened loading overlay.\n   */\n\n\n  LoadingController.prototype.getTop = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-loading')];\n      });\n    });\n  };\n\n  return LoadingController;\n}();\n\nvar ModalController =\n/** @class */\nfunction () {\n  function ModalController(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create a modal overlay with modal options.\n   *\n   * @param options The options to use to create the modal.\n   */\n\n\n  ModalController.prototype.create = function (options) {\n    return createOverlay('ion-modal', options);\n  };\n  /**\n   * Dismiss the open modal overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the modal.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the modal.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the modal to dismiss. If an id is not provided, it will dismiss the most recently opened modal.\n   */\n\n\n  ModalController.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-modal', id);\n  };\n  /**\n   * Get the most recently opened modal overlay.\n   */\n\n\n  ModalController.prototype.getTop = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-modal')];\n      });\n    });\n  };\n\n  return ModalController;\n}();\n\nvar PickerController =\n/** @class */\nfunction () {\n  function PickerController(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create a picker overlay with picker options.\n   *\n   * @param options The options to use to create the picker.\n   */\n\n\n  PickerController.prototype.create = function (options) {\n    return createOverlay('ion-picker', options);\n  };\n  /**\n   * Dismiss the open picker overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the picker.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the picker.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the picker to dismiss. If an id is not provided, it will dismiss the most recently opened picker.\n   */\n\n\n  PickerController.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-picker', id);\n  };\n  /**\n   * Get the most recently opened picker overlay.\n   */\n\n\n  PickerController.prototype.getTop = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-picker')];\n      });\n    });\n  };\n\n  return PickerController;\n}();\n\nvar PopoverController =\n/** @class */\nfunction () {\n  function PopoverController(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create a popover overlay with popover options.\n   *\n   * @param options The options to use to create the popover.\n   */\n\n\n  PopoverController.prototype.create = function (options) {\n    return createOverlay('ion-popover', options);\n  };\n  /**\n   * Dismiss the open popover overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the popover.\n   * This can be useful in a button handler for determining which button was\n   * clicked to dismiss the popover.\n   * Some examples include: ``\"cancel\"`, `\"destructive\"`, \"selected\"`, and `\"backdrop\"`.\n   * @param id The id of the popover to dismiss. If an id is not provided, it will dismiss the most recently opened popover.\n   */\n\n\n  PopoverController.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-popover', id);\n  };\n  /**\n   * Get the most recently opened popover overlay.\n   */\n\n\n  PopoverController.prototype.getTop = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-popover')];\n      });\n    });\n  };\n\n  return PopoverController;\n}();\n\nvar ToastController =\n/** @class */\nfunction () {\n  function ToastController(hostRef) {\n    registerInstance(this, hostRef);\n  }\n  /**\n   * Create a toast overlay with toast options.\n   *\n   * @param options The options to use to create the toast.\n   */\n\n\n  ToastController.prototype.create = function (options) {\n    return createOverlay('ion-toast', options);\n  };\n  /**\n   * Dismiss the open toast overlay.\n   *\n   * @param data Any data to emit in the dismiss events.\n   * @param role The role of the element that is dismissing the toast. For example, 'cancel' or 'backdrop'.\n   * @param id The id of the toast to dismiss. If an id is not provided, it will dismiss the most recently opened toast.\n   */\n\n\n  ToastController.prototype.dismiss = function (data, role, id) {\n    return dismissOverlay(document, data, role, 'ion-toast', id);\n  };\n  /**\n   * Get the most recently opened toast overlay.\n   */\n\n\n  ToastController.prototype.getTop = function () {\n    return tslib_1.__awaiter(this, void 0, void 0, function () {\n      return tslib_1.__generator(this, function (_a) {\n        return [2\n        /*return*/\n        , getOverlay(document, 'ion-toast')];\n      });\n    });\n  };\n\n  return ToastController;\n}();\n\nexport { ActionSheetController as ion_action_sheet_controller, AlertController as ion_alert_controller, Anchor as ion_anchor, LoadingController as ion_loading_controller, ModalController as ion_modal_controller, PickerController as ion_picker_controller, PopoverController as ion_popover_controller, ToastController as ion_toast_controller };"],"sourceRoot":""}